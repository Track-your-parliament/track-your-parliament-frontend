{"version":3,"sources":["Tag.js","PerMonthTimeline.js"],"names":["useStyles","makeStyles","theme","chip","props","margin","spacing","fontSize","size","height","borderRadius","paddingLeft","paddingRight","Tag","text","classes","history","useHistory","label","className","onClick","e","push","window","scrollTo","top","behavior","root","timeline","minHeight","background","palette","common","black","timelineElement","padding","time","color","primary","PerMonthTimeline","params","location","useLocation","queryParams","URLSearchParams","search","data","useMemo","yearParam","get","filter","item","year","Number","filterDataWithUrl","initialData","animate","layout","map","key","month","timelineelement","contentStyle","timelineStyles","default","content","contentArrowStyle","arrow","iconStyle","icon","iconOnClick","position","DateTime","fromObject","toFormat","keywords_list","keyword","i","shortid","generate","length"],"mappings":"4JAAA,6CAIMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,SAAAC,GAAK,MAAK,CACdC,OAAQH,EAAMI,QAAQ,GACtBC,SAAuB,IAAbH,EAAMI,KAAc,EAAI,MAClCC,OAAqB,GAAbL,EAAMI,KAAa,IAAM,MACjCE,aAA2B,IAAbN,EAAMI,KAAc,EAAI,MACtCG,YAA0B,IAAbP,EAAMI,KAAc,MACjCI,aAA2B,IAAbR,EAAMI,KAAc,YAkBvBK,IAdH,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMN,EAAW,EAAXA,KACbO,EAAUf,EAAU,CAAEQ,SACtBQ,EAAUC,cAOhB,OAAO,kBAAC,IAAD,CAAMC,MAAOJ,EAAMK,UAAWJ,EAAQZ,KAAMiB,QAL/B,SAAAC,GAClBL,EAAQM,KAAK,oBAAsBR,GACnCS,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,gB,4rTCrBxC,yGAaM1B,EAAYC,aAAW,SAAAC,GAC3B,MAAO,CACLyB,KAAM,GACNC,SAAU,CACRC,UAAW,OACX,WAAY,CACVC,WAAY5B,EAAM6B,QAAQC,OAAOC,QAGrCC,gBAAiB,CACfC,QAAS,GAEXC,KAAM,CACJC,MAAOnC,EAAM6B,QAAQjB,KAAKwB,aAgEjBC,UAnDU,SAAAC,GACvB,IAAMxB,EAAUC,cACVwB,EAAWC,cACX3B,EAAUf,IACV2C,EAAc,IAAIC,gBAAgBH,EAASI,QAC3CC,EAAOC,mBAAQ,kBAbG,SAACD,EAAMH,GAC/B,IAAMK,EAAYL,EAAYM,IAAI,QAClC,OAAID,EACKF,EAAKI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,OAASC,OAAOL,MAE3CF,EAQoBQ,CAAkBC,EAAaZ,KAAc,CACtEA,IAMF,OACE,kBAAC,mBAAD,CACEa,SAAS,EACTC,OAAO,WACPtC,UAAWJ,EAAQa,UAElBkB,EAAKY,KAAI,SAAAP,GAAI,OACZ,kBAAC,0BAAD,CACEQ,IAAKR,EAAKC,KAAO,IAAMD,EAAKS,MAC5BzC,UAAWJ,EAAQ8C,gBACnBC,aAAcC,IAAeC,QAAQC,QACrCC,kBAAmBH,IAAeC,QAAQG,MAC1CC,UAAWL,IAAeC,QAAQK,KAClCC,YAAa,kBAhBKlB,EAgBkBD,EAAKC,KAhBjBQ,EAgBuBT,EAAKS,WAf1D5C,EAAQM,KAAK,aAAe8B,EAAO,UAAYQ,GADxB,IAACR,EAAMQ,GAiBxBW,SAAS,SAET,wBAAIpD,UAAWJ,EAAQqB,MACpBoC,WAASC,WAAW,CACnBrB,KAAMD,EAAKC,KACXQ,MAAOT,EAAKS,QACXc,SAAS,WAGbvB,EAAKwB,cAAcjB,KAAI,SAACkB,EAASC,GAAV,OACtB,kBAAC,IAAD,CACElB,IAAKR,EAAKC,KAAO,IAAMD,EAAKS,MAAQ,QAAUkB,IAAQC,WACtDjE,KAAM8D,EACNpE,KAAM2C,EAAKwB,cAAcK,OAASH,OAGtC","file":"static/js/7.fa90164e.chunk.js","sourcesContent":["import React from 'react'\nimport { Chip, makeStyles } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  chip: props => ({\n    margin: theme.spacing(1),\n    fontSize: props.size * 0.05 + 1 + 'rem',\n    height: props.size * 0.1 + 1.2 + 'rem',\n    borderRadius: props.size * 0.05 + 1 + 'rem',\n    paddingLeft: props.size * 0.01 + 'rem',\n    paddingRight: props.size * 0.01 + 'rem',\n  }),\n}))\n\nconst Tag = ({ text, size }) => {\n  const classes = useStyles({ size })\n  const history = useHistory()\n\n  const handleClick = e => {\n    history.push('/proposal?search=' + text)\n    window.scrollTo({ top: 0, behavior: 'smooth' })\n  }\n\n  return <Chip label={text} className={classes.chip} onClick={handleClick} />\n}\n\nTag.propTypes = {}\n\nexport default Tag\n","import React, { useMemo } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement,\n} from 'react-vertical-timeline-component'\nimport { timelineStyles } from './theme'\nimport shortid from 'shortid'\nimport { DateTime } from 'luxon'\nimport Tag from './Tag'\nimport initialData from './data/top_keywords_by_month.json'\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {},\n    timeline: {\n      minHeight: '100%',\n      '&:before': {\n        background: theme.palette.common.black,\n      },\n    },\n    timelineElement: {\n      padding: 0,\n    },\n    time: {\n      color: theme.palette.text.primary,\n    },\n  }\n})\n\nconst filterDataWithUrl = (data, queryParams) => {\n  const yearParam = queryParams.get('year')\n  if (yearParam) {\n    return data.filter(item => item.year === Number(yearParam))\n  }\n  return data\n}\n\nconst PerMonthTimeline = params => {\n  const history = useHistory()\n  const location = useLocation()\n  const classes = useStyles()\n  const queryParams = new URLSearchParams(location.search)\n  const data = useMemo(() => filterDataWithUrl(initialData, queryParams), [\n    queryParams,\n  ])\n\n  const iconClickHandler = (year, month) => {\n    history.push('/day?year=' + year + '&month=' + month)\n  }\n  return (\n    <VerticalTimeline\n      animate={true}\n      layout=\"1-column\"\n      className={classes.timeline}\n    >\n      {data.map(item => (\n        <VerticalTimelineElement\n          key={item.year + '-' + item.month}\n          className={classes.timelineelement}\n          contentStyle={timelineStyles.default.content}\n          contentArrowStyle={timelineStyles.default.arrow}\n          iconStyle={timelineStyles.default.icon}\n          iconOnClick={() => iconClickHandler(item.year, item.month)}\n          position=\"right\"\n        >\n          <h3 className={classes.time}>\n            {DateTime.fromObject({\n              year: item.year,\n              month: item.month,\n            }).toFormat('LLLL y')}\n          </h3>\n\n          {item.keywords_list.map((keyword, i) => (\n            <Tag\n              key={item.year + '-' + item.month + '_tag_' + shortid.generate()}\n              text={keyword}\n              size={item.keywords_list.length - i}\n            />\n          ))}\n          <br />\n        </VerticalTimelineElement>\n      ))}\n    </VerticalTimeline>\n  )\n}\n\nPerMonthTimeline.propTypes = {}\n\nexport default PerMonthTimeline\n"],"sourceRoot":""}